services:
  # PostgreSQL database for audit logs and application data
  postgres:
    image: postgres:15-alpine
    container_name: k8s-webui-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: k8s_webui
      POSTGRES_USER: k8s_user
      POSTGRES_PASSWORD: k8s_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - k8s-webui-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U k8s_user -d k8s_webui"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: k8s-webui-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - k8s-webui-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Backend API service (development mode)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: k8s-webui-backend
    restart: unless-stopped
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://k8s_user:k8s_password@postgres:5432/k8s_webui?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - PASETO_SECRET_KEY=dev-32-byte-secret-key-for-prod!
      - TOKEN_DURATION=24h
      - LOG_LEVEL=debug
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - ~/.kube:/home/app/.kube:ro  # Mount kubeconfig for K8s access
      - /var/run/docker.sock:/var/run/docker.sock:ro  # For Docker-in-Docker scenarios
    ports:
      - "8080:8080"
    networks:
      - k8s-webui-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Vite dev server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: k8s-webui-frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:8080/api
      - VITE_WS_URL=ws://localhost:8080/ws
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    ports:
      - "5173:5173"
    networks:
      - k8s-webui-network
    depends_on:
      - backend
    command: pnpm run dev --host 0.0.0.0

volumes:
  postgres_data:
    name: k8s-webui-postgres-data
  redis_data:
    name: k8s-webui-redis-data

networks:
  k8s-webui-network:
    name: k8s-webui-network
    driver: bridge